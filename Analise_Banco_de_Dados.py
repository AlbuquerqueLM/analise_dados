# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17kVZ3lLkTO_Jq51cSW9p0IQkDhh9atg7
"""

# Vou começar o meu código importando as bibliotecas necessárias para continuar
import sqlite3
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns



# Aqui estarei conectando ao banco de dados, vai criar um pelo fato desse não existir anteriormente
conexao = sqlite3.connect('dados_vendas.db')

# Essa função vai ser colocada para que me permita criar um cursor no sql
cursor = conexao.cursor()

# Aqui vai ser feita a tavela, ela funciona igual a conexão do sqlite, não existindo o arquivo, vai ser criado
cursor.execute('''
CREATE TABLE IF NOT EXISTS vendas1 (
    id_venda INTEGER PRIMARY KEY AUTOINCREMENT,
    data_venda DATE,
    produto TEXT,
    categoria TEXT,
    valor_venda REAL
)
''')

# Vou por os dados do exemplo dado no roteiro
cursor.execute('''
INSERT INTO vendas1 (data_venda, produto, categoria, valor_venda) VALUES
('2023-01-01', 'Produto A', 'Eletrônicos', 1500.00),
('2023-01-05', 'Produto B', 'Roupas', 350.00),
('2023-02-10', 'Produto C', 'Eletrônicos', 1200.00),
('2023-03-15', 'Produto D', 'Livros', 200.00),
('2023-03-20', 'Produto E', 'Eletrônicos', 800.00),
('2023-04-02', 'Produto F', 'Roupas', 400.00),
('2023-05-05', 'Produto G', 'Livros', 150.00),
('2023-06-10', 'Produto H', 'Eletrônicos', 1000.00),
('2023-07-20', 'Produto I', 'Roupas', 600.00),
('2023-08-25', 'Produto J', 'Eletrônicos', 700.00),
('2023-09-30', 'Produto K', 'Livros', 300.00),
('2023-10-05', 'Produto L', 'Roupas', 450.00),
('2023-11-15', 'Produto M', 'Eletrônicos', 900.00),
('2023-12-20', 'Produto N', 'Livros', 250.00)
''')

# Local que vai permitir que as alterações subam
conexao.commit()

df_vendas = pd.read_sql_query("SELECT * FROM vendas1", conexao)

# Feito isso, com a linha superior e a inferior estou carregando os dados no Pandas e convertendo a coluna de datas para datetime
df_vendas['data_venda'] = pd.to_datetime(df_vendas['data_venda'])

# Lembrando de usar print para informar as primeiras linhas
print("Os dados foram carregados:")
display(df_vendas.head())


# A partir daqui vou começar a fazer a analise dos dados, iniciando com as estatisticas gerais, seguido do total de vendas por categoria e finalizando com total de vendas por mês
print("\n Estatísticas gerais das vendas:")
display(df_vendas.describe())

vendas_por_categoria = df_vendas.groupby('categoria')['valor_venda'].sum().reset_index()
print("\n Total de vendas por categoria:")
display(vendas_por_categoria)

df_vendas['mes'] = df_vendas['data_venda'].dt.month
vendas_por_mes = df_vendas.groupby('mes')['valor_venda'].sum().reset_index()
print("\n Total de vendas por mês:")
display(vendas_por_mes)



# A partir dessa linha vou começar a focar na visualização dos dados, vou buscar configurar no estilo do seaborn
sns.set(style="whitegrid")

# Geração de Graficos Abaixo
# por categoria
plt.figure(figsize=(8,5))
sns.barplot(x='categoria', y='valor_venda', data=vendas_por_categoria, palette='pastel')
plt.title("Total de Vendas por Categoria")
plt.ylabel("Valor Total (R$)")
plt.xlabel("Categoria")
plt.show()

# ao longo dos meses
plt.figure(figsize=(10,5))
sns.lineplot(x='mes', y='valor_venda', data=vendas_por_mes, marker='o', color='blue')
plt.title("Total de Vendas por Mês")
plt.xlabel("Mês")
plt.ylabel("Valor Total (R$)")
plt.xticks(range(1,13))
plt.show()

# Espaço para colocar os prints relacionados a conclusões e insigths para não poluir o programa
print(" Insights obtidos:")
print("- Eletrônicos foram a categoria com maior faturamento anual.")
print("- As vendas apresentam variações mensais significativas, com picos em janeiro e novembro.")
print("- Estratégias de marketing e estoque podem ser reforçadas em meses de alta demanda.")
print("- Roupas e livros têm potencial de crescimento se campanhas de promoção forem aplicadas.")